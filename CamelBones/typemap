TYPEMAP

const char * T_PV

id          ID_PTR

NSRectEdge  T_IV
NSRectEdge* T_PTR

NSColor**   T_PTR

SEL         T_SELTYPE
Class       T_CLASSTYPE

OSType      T_OSTYPE
NSPoint     T_NSPOINT
NSRange     T_NSRANGE
NSRect      T_NSRECT
NSSize      T_NSSIZE
CGPoint     T_CGPOINT
CGRect      T_CGRECT
CGSize      T_CGSIZE
NSInteger   T_IV
NSUInteger  T_UV

#ifdef __i386__
CGFloat     T_FLOAT
#endif
#ifdef __x86_64__
CGFloat     T_DOUBLE
#endif

OSType*     T_PTR
NSPoint*    T_PTR
NSRange*    T_PTR
NSRect*     T_PTR
NSSize*     T_PTR
CGPoint*    T_PTR
CGRect*     T_PTR
CGSize*     T_PTR
CGFloat*    T_PTR
NSInteger*  T_PTR
NSUInteger* T_PTR

float*      T_PTR
double*     T_PTR
int*        T_PTR

BOOL        T_BOOL

INPUT

ID_PTR
    $var = REAL_CBDerefSVtoID($arg);

T_OSTYPE
    $var = REAL_CBOSTypeFromSV($arg);
T_NSPOINT
    $var = REAL_CBPointFromSV($arg);
T_NSRANGE
    $var = REAL_CBRangeFromSV($arg);
T_NSRECT
    $var = REAL_CBRectFromSV($arg);
T_NSSIZE
    $var = REAL_CBSizeFromSV($arg);
T_CGPOINT
    $var = REAL_CBCGPointFromSV($arg);
T_CGRECT
    $var = REAL_CBCGRectFromSV($arg);
T_CGSIZE
    $var = REAL_CBCGSizeFromSV($arg);

T_SELTYPE
    $var = REAL_CBSelectorFromSV($arg);
T_CLASSTYPE
    $var = REAL_CBClassFromSV($arg);

OUTPUT

ID_PTR
    $arg = REAL_CBDerefIDtoSV($var);

T_OSTYPE
    $arg = REAL_CBOSTypeToSV($var);
T_NSPOINT
    $arg = REAL_CBPointToSV($var);
T_NSRANGE
    $arg = REAL_CBRangeToSV($var);
T_NSRECT
    $arg = REAL_CBRectToSV($var);
T_NSSIZE
    $arg = REAL_CBSizeToSV($var);
T_CGPOINT
    $arg = CBCGPointToSV($var);
T_CGRECT
    $arg = CBCGRectToSV($var);
T_CGSIZE
    $arg = CBCGSizeToSV($var);
    
T_SELTYPE
    $arg = REAL_CBSVFromSelector($var);
T_CLASSTYPE
    $arg = REAL_CBSVFromClass($var);    
